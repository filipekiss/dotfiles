snippet i "import ··· from '···'" b
import ${2:${1/.*\///}} from '${1:···}'$0
endsnippet

snippet ii "import {···} from '···'" b
import {${2:${1/.*\///}}} from '${1:···}'$0
endsnippet

snippet i* "import * as ···" b
import * as ${2:${1/^.*\///}} from '${1:···}'$0
endsnippet

snippet it "import type { ··· } from '···'" b
import type { $1 } from '$2'$0
endsnippet

snippet r "const ··· = require('···')" b
const ${2:${1/^.*\///}} = require('${1:···}')$0
endsnippet


snippet jsc "JSX Comment"
{/* ${0:${VISUAL}} */}
endsnippet

snippet "^react" "Import React" rbA
import React${1:, \{Component\}} from 'react';
endsnippet

snippet "^recom" "React Component" rbA
import React, { Component } from 'react';

class ${1:MyComponent} extends Component {
    render() {
        return (
            ${2:<div></div>}
        );
    }
}

export default $1;
endsnippet

snippet "^iife" "(function())()" rbA
(function(${1:window}){
$0
})($1)
endsnippet

snippet foro "for item of collection"
for (let [ ${1:key}, ${1:value} ] of Object.entries(${2:collection})) {
	${0:${VISUAL}}
}
endsnippet

snippet foreach "forEach"
${1:${VISUAL:collection}}.forEach(${2:item} => {
    $0
})
endsnippet

snippet def "variable = variable || default"
${1:variable} = $1 || ${2:"${3:default}"}
endsnippet
