#!/usr/bin/env bash

tput sgr0

RED=$(tput setaf 1)
YELLOW=$(tput setaf 3)
GREEN=$(tput setaf 2)
PURPLE=$(tput setaf 5)
BLUE=$(tput setaf 4)
WHITE=$(tput setaf 7)
BOLD=$(tput bold)
RESET=$(tput sgr0)

LOG_STATUS_SUCCESS="✔"
LOG_STATUS_ERROR="✖"
LOG_STATUS_INFO="➜"

e_header()   {
  e_line
  e_line "${1} ==" "${BOLD}" "==" "${BOLD}"
}

e_line() {
  [[ $LINE_BREAK != "" ]] && LINE_BREAK="\n"
  printf "${4} %b${RESET} ${2}%b${RESET}${LINE_BREAK}" "${3}" "${1}"
}

e_success() {
  e_line "$1" "${GREEN}" "${LOG_STATUS_SUCCESS}" "${GREEN}"
}

e_error() {
  e_line "$1" "${RED}" "${LOG_STATUS_ERROR}" "${RED}"
}

e_info() {
  e_line "$1" "" "${LOG_STATUS_INFO}" "${BLUE}"
}

e_reset_line() {
  local COLS=$(tput cols)
  printf "\r" && printf "%${COLS}s\r"
  LINE_BREAK="\n"
}

e_set_inline() {
  LINE_BREAK=""
}

e_spinner() {
  local spinstr='|/-\'
  while sleep 0.1; do
    e_reset_line
    local temp=${spinstr#?}
    printf " ${BLUE}%c${RESET} ${2}%b${RESET}" "$spinstr" "${1}"
    local spinstr=$temp${spinstr%"$temp"}
  done
}

e_activity() {
  local MESSAGE="$1"
  e_spinner "$MESSAGE" &
  E_SPINNER_PID=$!
  disown $E_SPINNER_PID #make sure bash doesn't freak out when we kill the spinner
}

e_activity_end() {
  kill $E_SPINNER_PID &> /dev/null
  e_reset_line
}


LINE_BREAK="\n"
