# vim:ft=muttrc:
bind index,pager g noop

bind attach <return> view-mailcap
bind compose p postpone-message
bind editor <space> noop
bind editor <Tab> complete-query
bind generic x tag-entry
bind index gg       first-entry
bind index G        last-entry
bind index r        group-reply
bind index <space>  collapse-thread
bind index t tag-thread # Usually "tag-entry", but we use "x" (Gmail key) for that.
bind index,pager <down>   sidebar-next
bind index,pager <up>     sidebar-prev
bind index,pager <right>  sidebar-open
bind index,pager <left>   sidebar-toggle-visible
bind index,pager c  mail #Compose
bind index,pager s  flag-message	#Star a message
bind index,pager D delete-thread	#Delete
bind index,pager N search-opposite
bind index,pager \Cd next-page
bind index,pager \Cu previous-page
bind index,pager b sidebar-toggle-visible
bind index,pager / vfolder-from-query # Searching with notmuch integration in neomutt
bind pager <space> next-page
bind pager G bottom
bind pager gg top
bind pager u exit
bind pager j next-line
bind pager k previous-line
bind pager r group-reply	#Reply all

# Legend:
#   ! = $spoolfile (INBOX)
#   > = $mbox (Archive)
#   ; = <tag-prefix> (operate on tagged messages if possible, or current message if nothi=ng tagged)

macro index,pager gi "<change-folder>!<enter>" "go to inbox"
macro index,pager ga "<change-folder>><enter>" "go to all mail"
macro index,pager gl "<change-folder>?<toggle-mailboxes>" "go to 'Label'"
macro index,pager gs "<change-folder>!.Starred<enter>" "go to starred messages"
macro index,pager gt "<change-folder>!.Sent<enter>" "go to Sent Mail"
macro index,pager gd "<change-folder>!.Drafts<enter>" "go to drafts"
macro attach D "<save-entry><bol>~/.mutt/attachments/<eol><enter>" "Save to ~/.mutt/attachments"

# "Smart" equivalent to `set resolve = yes`: see "{next,previous}.mutt" for
# info.
macro index j "<next-undeleted><enter-command>source ~/.mutt/config/next.mutt<enter>" "next undeleted"
macro index k "<previous-undeleted><enter-command>source ~/.mutt/config/previous.mutt<enter>" "previous undeleted"
macro pager J "<next-entry><enter-command>source ~/.mutt/config/next.mutt<enter>" "next entry"
macro pager K "<previous-entry><enter-command>source ~/.mutt/config/previous.mutt<enter>" "next entry"

# Default direction is "down".
source ~/.mutt/config/next.mutt

macro pager s "<flag-message>" "star/unstar"
macro index s ";<flag-message>" "star/unstar"

macro index x "<tag-message>" "select message"
macro pager x "<tag-message><exit>" "select message"

macro index *a "<tag-pattern>~A<enter>" "select all"
# Deselect all (mnemonic: "select [n]one"); for efficiency we only untag tagged.
macro index *n "<untag-pattern>~T<enter>" "deselect all"
macro index *r "<untag-pattern>~T<enter><tag-pattern>~R<enter>" "select read"
macro index *u "<untag-pattern>~T<enter><tag-pattern>~U<enter>" "select unread"
macro pager t "<exit><tag-thread>" "tag thread"

macro pager \Cu "<enter-command>set pipe_decode = yes<enter>|urlview<enter><enter-command>set pipe_decode = no<enter>" "view URLs"

macro pager m "<save-message>?<toggle-mailboxes>" "move to..."
macro index m ";<save-message>?<toggle-mailboxes>" "move to..."

macro pager U <set-flag>N "mark as unread"
macro index U ";<set-flag>N" "mark as unread"
macro pager I <clear-flag>N "mark as read"
macro index I ";<clear-flag>N" "mark as read"

# Ctrl-R to mark all as read
macro index \Cr "T~U<enter><tag-prefix><clear-flag>N<untag-pattern>.<enter>" "mark all messages as read"

# Macro to toggle alternates (plain <-> html), based on:
# https://groups.google.com/d/msg/comp.mail.mutt/9I702oMwQQE/JqdLnp3j9WAJ
macro pager ,@aoh= "<enter-command>unalternative_order *; alternative_order text/html text/plain text/enriched; macro pager A ,@aot= 'toggle alternative order'<enter><exit><display-message>"
macro pager ,@aot= "<enter-command>unalternative_order *; alternative_order text/plain text/enriched text/html; macro pager A ,@aoh= 'toggle alternative order'<enter><exit><display-message>"
macro pager A ,@aoh= "toggle alternative order"
