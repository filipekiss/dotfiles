# vim: ft=tmux tw=0

# ====================
# = General
# ====================

# Use ` as prefix
set-option -g prefix `
unbind C-g
set-option -g prefix2 C-g
unbind a
bind a last-window

# Allow me to type ` normally
bind-key ` send-prefix

# Start numbering at 1
set -g base-index 1
setw -g pane-base-index 1
# Re-number windows when closing
set -g renumber-windows on

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on


# auto window rename
set-window-option -g automatic-rename

# use terminal colors
# https://sunaku.github.io/tmux-24bit-color.html#usage
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

# Vi copypaste mode
set-window-option -g mode-keys vi
if-shell "test '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -ge 4 \)'" 'bind-key -Tcopy-mode-vi v send -X begin-selection; bind-key -Tcopy-mode-vi y send -X copy-selection-and-cancel'
if-shell '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -lt 4\) -o #{$TMUX_VERSION_MAJOR} -le 1' 'bind-key -t vi-copy v begin-selection; bind-key -t vi-copy y copy-selection'

# enable mouse
set -g mouse on

# from powerline
run-shell "tmux set-environment -g TMUX_VERSION_MAJOR $(tmux -V | cut -d' ' -f2 | cut -d'.' -f1 | sed 's/[^0-9]*//g')"
run-shell "tmux set-environment -g TMUX_VERSION_MINOR $(tmux -V | cut -d' ' -f2 | cut -d'.' -f2 | sed 's/[^0-9]*//g')"

# if is macos, source the tmux-osx.conf file (enables proper pasteboard)
if-shell "uname | grep -q Darwin" "source-file ~/.tmux-osx.conf"

# ====================
# Key Bindings
# ====================

# vim-tmux-navigator settings
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(fzf|view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# This is used with my fzf-git functions
# Map prefix + [g b t r h f u] and use C-g as a secondary prefix:
bind-key C-g send-keys C-g C-g
bind-key C-b send-keys C-g C-b
bind-key C-t send-keys C-g C-t
bind-key C-r send-keys C-g C-r
bind-key C-h send-keys C-g C-h
bind-key C-f send-keys C-g C-f
bind-key C-u send-keys C-g C-u

# Use prefix+C-l to clear screen
bind-key C-l send-keys C-l

# set window split
bind-key | split-window -h -c "#{pane_current_path}"
bind-key _ split-window -c "#{pane_current_path}"

# use Shift+Alt+arrows to resize the pane, just like we do with vim. No need to use the prefix
bind -n S-M-Left resize-pane -L
bind -n S-M-Down resize-pane -D
bind -n S-M-Up resize-pane -U
bind -n S-M-Right resize-pane -R

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# set to main-horizontal, 60% height for main pane
bind m set-window-option main-pane-height 60\; select-layout main-horizontal

# create a new named window
bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# use <prefix>i to broadcast to all panes. toggles on off
bind i setw synchronize-pane \; display-message "#{?pane_synchronized, Broadcasting ON, Broadcasting OFF}"

# show pane switcher
bind-key Tab choose-tree

# Source status-bar config
source-file ~/.tmux-status-bar.conf

# Clone plugin manager if not available
if-shell "test ! -f ~/.tmux/plugins/tpm/tpm" "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"


# ====================
# Plugin Manager https://github.com/tmux-plugins/tpm
# ====================

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
