#!/usr/bin/env bash

# mx
# version 0.7

# Contributors:
#   Wynn Netherland - https://github.com/pengwynn
#   Adam Jahnke - https://github.com/adamyonk
#   Filipe Kiss - https://github.com/filipekiss

# Usage:
#   mx [session]

# To 'auto-launch' projects, you'll need a $PROJECTS dir where you keep code
# sorted like so: $PROJECTS/<org or user>/<repo>.
# So, a typical workflow would look like:
#   $ hub clone pengwynn/octonaut $PROJECTS/pengwynn/octonaut
#   $ mx octonaut

# If `mx` is called with a <session> name, and there is no valid repo inside
# $PROJECTS, a new tmux session will be initialized in the current working
# directory with a name of <session>

# If the target directory has a .tmux file, that file will be executed
# (and sent the <session> name as the first argument) instead of the default
# window setup (explained below). An example .tmux file may look like
# so:
#   #!/usr/bin/env sh
#   SESSION="$1"
#   cd ~/.dotfiles
#   tmux new-session -s "$SESSION" -n editor -d
#   tmux send-keys 'e' C-m ':CtrlP' C-m
#   tmux select-window -t "$SESSION":1

# If there is no .tmux file, the default window setup is as follows:
# editor/shell  - runs $EDITOR right away and a new shell in a 50/50 split
# console       - if script/console is available
# server        - if script/server is available

set -e


if [ -z "$1" ]; then
  SESSION="${PWD##*/}"
else
  SESSION="$1"
fi

# tmux 1.9a+ doesn't like .'s in session names
SESSION="${SESSION//./_}"
[[ "$SESSION" == *"dotfiles" ]] && SESSION="dotfiles"

mx-shared-session "create"

if ! (tmux has-session -t "$SESSION" > /dev/null 2>&1); then

    WORKINGDIR=""

    if [[ "$SESSION" == "dotfiles" && -d "$HOME/.dotfiles" ]]; then
        WORKINGDIR="${HOME}/.dotfiles"
    elif [ -d "${HOME}/${SESSION}" ]; then
        WORKINGDIR="$HOME/$SESSION"
    elif [ -d "$PROJECTS"/"$SESSION"/"$2" ]; then
        WORKINGDIR="$PROJECTS"/"$SESSION"/"$2"
    elif [ -d "$PROJECTS"/"$SESSION" ]; then
        WORKINGDIR="$PROJECTS"/"$SESSION"
    else
        WORKINGDIR="$PWD"
    fi

    tmux new-session -s "$SESSION" -n editor -d -c $WORKINGDIR
    # If there's a start script, execute it
    if  [ -f "${WORKINGDIR}/start" ]; then
        tmux send-keys -t "$SESSION":1 "${WORKINGDIR}/start" C-m
    # Else, run the default config: Split 85/15 with editor on left and shell on $PWD on right
    else
        tmux split-window -h -p 15 -c $WORKINGDIR
        tmux select-pane -t0
        tmux send-keys -t "$SESSION":1 "$EDITOR" C-m
    fi

    mx-shared-session "link"
    tmux select-window -t 1
fi

if [ -z "$TMUX" ]; then
  tmux attach -t "$SESSION"
else
  tmux switch-client -t "$SESSION"
fi
