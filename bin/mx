#!/usr/bin/env bash

# mx
# version 1.1.1
#
# Versioning: A.B.C
# A - Major changes either to bin/mx or bin/mx-shared-session
# B - Minor changes or bug fixes to bin/mx
# C - Minor changes or bug fices to bin/mx-shared-session

# Contributors:
#   Wynn Netherland - https://github.com/pengwynn
#   Adam Jahnke - https://github.com/adamyonk
#   Filipe Kiss - https://github.com/filipekiss

# Usage:
#   mx [session]

set -e
source dotfiles "source"


if [ -z "$1" ]; then
  SESSION="${PWD##*/}"
else
  SESSION="$1"
fi

# tmux 1.9a+ doesn't like .'s in session names
SESSION="${SESSION//./_}"
[[ "$SESSION" == *'dotfiles' ]] && SESSION='dotfiles'

mx-shared-session create&

if ! (tmux has-session -t "$SESSION" > /dev/null 2>&1); then
    WORKINGDIR=""

    twidth=$(tput cols)
    theight=$(tput lines)

    e_set_inline
    if [[ "$SESSION" == 'dotfiles' && -d "$HOME/.dotfiles" ]]; then
        e_info "Using dotfiles settings"
        WORKINGDIR="${HOME}/.dotfiles"
    elif [ -d "${HOME}/${SESSION}" ]; then
        e_info "Found project at ${HOME}/${SESSION}"
        WORKINGDIR="$HOME/$SESSION"
    elif [ -d "$PROJECTS"/"$SESSION"/"$2" ]; then
        e_info "Found project at ${HOME}/${SESSION}/$2"
        WORKINGDIR="$PROJECTS"/"$SESSION"/"$2"
    elif [ -d "$PROJECTS"/"$SESSION" ]; then
        e_info "Found project at ${PROJECTS}/${SESSION}"
        WORKINGDIR="$PROJECTS"/"$SESSION"
    else
        e_info "Using current directory: $PWD"
        WORKINGDIR="$PWD"
    fi

    tmux new-session -s "$SESSION" -n editor -d -c $WORKINGDIR -x $twidth -y $theight
    # If there's a start script and it has +x permissions, execute it
    e_reset_line
    e_set_inline
    if  [ -x "${WORKINGDIR}/start" ]; then
        e_info "Running start script at ${WORKINGDIR}/start"
        tmux send-keys -t "$SESSION" "${WORKINGDIR}/start" C-m
    # Else, run the default config: Split 80/20 with editor on left and shell on $PWD on right
    else
        e_info "Setting up default workspace…"
        tmux send-keys -t "$SESSION" "$EDITOR" C-m
        tmux split-window -h -p 20 -c $WORKINGDIR -t "$SESSION"
        tmux new-window -d -n 'shell' -t "$SESSION" -c $WORKINGDIR
    fi

    tmux wait-for shared-create
    e_reset_line
    e_set_inline
    e_info "Linking shared windows…"
    mx-shared-session link $SESSION
    tmux select-window -t 1
    tmux select-pane -t 0
fi

if [ -z "$TMUX" ]; then
  tmux attach -t "$SESSION"
else
  tmux switch-client -t "$SESSION"
fi
