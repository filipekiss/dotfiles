#!/usr/bin/env bash


function create_shared_session() {

    twidth=$(tput cols)
    theight=$(tput lines)

    # If running this from inside a tmux session, use tmux total width instead of current pane
    # width, which is what tput will provide
    if [[ -n $TMUX ]]; then
        twidth=$(tmux display-message -p '#{window_width}')
        theight=$(tmux display-message -p '#{window_height}')
    fi

    local SESSION="${1:-shared}"
    local WORKINGDIR="${2:-${DOTFILES:-$HOME/.dotfiles}}"

    tmux new-session -s "$SESSION" -n dotfiles -d -c ${WORKINGDIR} -x $twidth -y $theight

    if [[ $twidth -ge 200 ]]; then
        SPLIT_ARGS="-h -l 80"
    elif [[ $twidth -ge 120 ]]; then
        SPLIT_ARGS="-h -p 50"
    fi

    tmux send-keys -t "$SESSION" "e" C-m
    if [[ -n $SPLIT_ARGS ]]; then
        tmux split-window $SPLIT_ARGS -c "$WORKINGDIR" -t "$SESSION"
    fi

    tmux select-window -t 1
    tmux select-pane -t 1
}

function link_session() {
    local TARGET_SESSION="${1:-}"
    local SOURCE_SESSION="${2:_shared}"
    if [[ -z $TARGET_SESSION && -z $TMUX ]]; then
        echo "You must run this inside a TMUX session"
        return
    fi
    if [[ -z $TARGET_SESSION ]]; then
        TARGET_SESSION=$(tmux display-message -p '#{session_name}')
    elif ! (tmux has-session -t "${TARGET_SESSION}" > /dev/null 2>&1); then
        echo "${TARGET_SESSION} not found."
        return 1
    fi
    tmux link-window -t ${TARGET_SESSION} -s ${SOURCE_SESSION}
}


SESSION="_shared"
if ! (tmux has-session -t "${SESSION}" > /dev/null 2>&1); then
    create_shared_session $SESSION ${DOTFILES:-${HOME}/.dotfiles}
fi
link_session "$1" "$SESSION"
