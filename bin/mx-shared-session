#!/usr/bin/env zsh

# mx-share-session is a session with utilities that is linked to every tmux session I run

function try_open() {
    _appended_windows+=("$1")
    tmux new-window -t '_shared' -a -n "$1"
    tmux set-option -t '_shared' allow-rename off
    if (type -p "$1" > /dev/null); then
        tmux send-keys -t '_shared' "$1 $2" C-m
    else
        tmux send-keys -t '_shared' "echo '$1 was not found in your pathâ€¦'" C-m
    fi
}

function create_shared_session() {
    # Create the session and the Log & Notes Window
    local twidth theight
    twidth=$(tput cols)
    theight=$(tput lines)
    _appended_windows=()
    tmux new-session -d -s '_shared' -n 'Log & Notes' -x $twidth -y $theight
    tmux set-option allow-rename off
    tmux send-keys -t '_shared' 'nvim ~/_log.md -c "silent! \!tmux wait-for -S log-editor"' C-m
    tmux wait-for log-editor
    tmux send-keys -t '_shared' ":vs ~/_notes.md | silent! !tmux wait-for -S notes-editor" C-m
    tmux wait-for notes-editor
    tmux send-keys -t '_shared' C-w h ":sp ~/_todo.md" C-m
    # Open other programs
    # This programs will be added from Window 9 in reversed order, so the first one will be at 9,
    # second one will be at 8 and so on.
    try_open 'weechat'
    echo "${(j:\n:)_appended_windows}" | tee /tmp/mx-shared-windows > /dev/null
}

function create() {
    if ! (tmux has-session -t '_shared' > /dev/null 2>&1); then
        create_shared_session
    fi
    tmux wait-for -S shared-create
}

function link() {
    if (tmux has-session -t '_shared' > /dev/null 2>&1); then
        tmux link-window -s '_shared:Log & Notes' -t "${1}:0" -d
        _appended_windows=($(< /tmp/mx-shared-windows))
        windowIdx=9
        for window in $_appended_windows; do
            windowIdx=$(( ${windowIdx} - 1 ))
            tmux link-window -s "_shared:${window}" -t "${1}:${windowIdx}" -d > /dev/null 2>&1
        done
    fi
    rm -f /tmp/mx-shared-windows > /dev/null 2>&1
    tmux wait-for -S shared-link
}

case "$1" in
    link)
        link "$2"
        ;;
    create)
        create
        ;;
esac
